type Mutation {
  createProduct(input: createProductInput!): createProductResult!
  DeleteProduct(id: ID!): DeleteProductResult!
}

#
# Inputs
#

## createProduct ##

# TODO: アッパーキャメルケースに修正する

input createProductInput {
  name: String!
  yahoo_auction_crawl_setting: createYahooAuctionCrawlSettingInput!
}

input createYahooAuctionCrawlSettingInput {
  keyword: String!
  category_id: Int
  min_price: Int!
  max_price: Int!
  enabled: Boolean!
}

#
# Results
#

## common ##

interface ResultBase {
  ok: Boolean!
}

interface UserError {
  code: String!
  message: String!
}

type ErrorDetail {
  field: String!
  message: String!
}

# type errorUnauthorized implements UserError {
#   code: String!
#   message: String!
# }

## createProduct ##

type createProductResult {
  id: ID!
  name: String!
}

## DeleteProduct ##

union DeleteProductResult =
    DeleteProductResultSuccess
  | DeleteProductResultError

type DeleteProductResultSuccess implements ResultBase {
  ok: Boolean!
}

type DeleteProductResultError implements ResultBase {
  ok: Boolean!
  error: DeleteProductResultErrors!
}

union DeleteProductResultErrors =
    DeleteProductResultValidationFailed
  # | errorUnauthorized

type DeleteProductResultValidationFailed implements UserError {
  code: String!
  message: String!
  details: [ErrorDetail!]!
}
