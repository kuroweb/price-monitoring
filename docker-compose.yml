version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: containers/frontend/Dockerfile
    ports:
      - 8080:3000
    stdin_open: true
    tty: true
    volumes:
      - ./volumes/frontend:/app
      - ./volumes/bff/graph/schema.graphqls:/app/graphql/schema.graphql
      - frontend-node-modules:/app/node_modules

  backend:
    build:
      context: .
      dockerfile: containers/backend/Dockerfile
    ports:
      - 3000:3000
    depends_on:
      backend_db:
        condition: service_healthy
    environment:
      DB_HOST_NAME: 'backend_db'
      DB_DATABASE_NAME: 'rails'
      DB_USER_NAME: 'root'
      DB_PASSWORD: ''
    stdin_open: true
    tty: true
    volumes:
      - ./volumes/backend:/app
      - backend-bundle:/usr/local/bundle
      # TODO: esbuildなどでnpmパッケージが必要になったタイミングで有効化
      # - backend-node-modules:/app/node_modules

  bff:
    build:
      context: .
      dockerfile: containers/bff/Dockerfile
    ports:
      - 3001:8080
    stdin_open: true
    tty: true
    volumes:
      - ./volumes/bff:/app

  mysql: &mysql
    image: mysql/mysql-server:8.0
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      MYSQL_ROOT_HOST: "%"
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    stdin_open: true
    tty: true

  backend_db:
    <<: *mysql
    volumes:
      - backend-db:/var/lib/mysql

  playwright:
    build:
      context: .
      dockerfile: containers/playwright/Dockerfile
    ports:
      - 8888:8888

volumes:
  frontend-node-modules:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/volumes/frontend/node_modules
      o: bind
  backend-bundle:
  # TODO: esbuildなどでnpmパッケージが必要になったタイミングで有効化
  # backend-node-modules:
  #   driver: local
  #   driver_opts:
  #     type: none
  #     device: ${PWD}/volumes/backend/node_modules
  #     o: bind
  backend-db:
