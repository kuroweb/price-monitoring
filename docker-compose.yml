x-backend: &backend
  build:
    context: .
    dockerfile: containers/backend/Dockerfile
  env_file: .env
  environment:
    DB_HOST_NAME: "backend-db"
    DB_DATABASE_NAME: "rails"
    DB_USER_NAME: "root"
    DB_PASSWORD: ""
    REDIS_URL: "redis://backend-redis:6379"
    PLAYWRIGHT_URL: "ws://backend-playwright:8888/ws"
    ALLOWED_ORIGINS: "nginx,dev.price-monitoring.com"
  stdin_open: true
  tty: true
  depends_on:
    backend-db:
      condition: service_healthy
    backend-redis:
      condition: service_healthy
  volumes:
    - ./volumes/backend:/app
    - backend-bundle:/usr/local/bundle
    # TODO: esbuildなどでnpmパッケージが必要になったタイミングで有効化
    # - backend-node-modules:/app/node_modules

x-mysql: &mysql
  image: mysql/mysql-server:8.0
  healthcheck:
    test: ["CMD", "mysqladmin", "ping"]
    interval: 5s
    timeout: 5s
    retries: 5
  environment:
    MYSQL_ROOT_HOST: "%"
    MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
  stdin_open: true
  tty: true

x-redis: &redis
  image: "redis:latest"
  healthcheck:
    test: ["CMD", "redis-cli", "ping"]
    interval: 5s
    timeout: 5s
    retries: 5

services:
  frontend:
    build:
      context: .
      dockerfile: containers/frontend/Dockerfile
    ports:
      - 8080:3000
    environment:
      NEXT_PRIVATE_API_URL: "https://nginx"
      NEXT_PUBLIC_API_URL: "https://nginx"
    stdin_open: true
    tty: true
    volumes:
      - ./volumes/frontend:/app
      - frontend-node-modules:/app/node_modules

  backend:
    <<: *backend
    ports:
      - 3000:3000

  backend-batch-1:
    <<: *backend
    command: sidekiq -C config/sidekiq/crawl_process.yml

  backend-batch-2:
    <<: *backend
    command: sidekiq -C config/sidekiq/general_process.yml

  backend-batch-3:
    <<: *backend
    command: sidekiq -C config/sidekiq/crawl_process_2.yml

  spring:
    <<: *backend
    command: bundle exec spring server && tail -f /dev/null

  backend-db:
    <<: *mysql
    volumes:
      - backend-db:/var/lib/mysql

  backend-redis:
    <<: *redis
    ports:
      - "6379:6379"
    volumes:
      - "backend-redis:/data"
    command: --appendonly yes

  backend-playwright:
    build:
      context: .
      dockerfile: containers/backend_playwright/Dockerfile
    ports:
      - 8888:8888

  nginx:
    image: nginx:latest
    ports:
      - "443:443"
    volumes:
      - ./volumes/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./volumes/nginx/certs:/etc/nginx/certs:ro
    depends_on:
      - backend
      - frontend
    restart: unless-stopped

  auth_provider:
    build:
      context: .
      dockerfile: containers/auth_provider/Dockerfile
    env_file: .env
    environment:
      DB_HOST_NAME: "auth_provider-db"
      DB_DATABASE_NAME: "rails"
      DB_USER_NAME: "root"
      DB_PASSWORD: ""
      ALLOWED_ORIGINS: "nginx,dev.price-monitoring.com"
      DOMAIN_NAME: "dev.price-monitoring.com"
    stdin_open: true
    tty: true
    depends_on:
      auth_provider-db:
        condition: service_healthy
    volumes:
      - ./volumes/auth_provider:/app
      - auth_provider-bundle:/usr/local/bundle
    ports:
      - 5050:3000

  auth_provider-db:
    <<: *mysql
    volumes:
      - auth_provider-db:/var/lib/mysql

volumes:
  frontend-node-modules:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/volumes/frontend/node_modules
      o: bind
  backend-bundle:
  # TODO: esbuildなどでnpmパッケージが必要になったタイミングで有効化
  # backend-node-modules:
  #   driver: local
  #   driver_opts:
  #     type: none
  #     device: ${PWD}/volumes/backend/node_modules
  #     o: bind
  backend-db:
  backend-redis:
  auth_provider-bundle:
  auth_provider-db:
