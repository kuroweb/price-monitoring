name: Reusable CD

on:
  workflow_call:
    inputs:
      service_name:
        required: true
        type: string
      build_command:
        required: true
        type: string
      push_command:
        required: true
        type: string
      apply_command:
        required: true
        type: string
    secrets:
      REGISTRY_IP:
        required: true
      REGISTRY_CRT:
        required: true
      REGISTRY_KEY:
        required: true
      CA_CRT:
        required: true
      CLIENT_CRT:
        required: true
      CLIENT_KEY:
        required: true
      SECRET_TEXT:
        required: true
      VPN_OVPN:
        required: true
      GIT_COMMIT_USER:
        required: true
      GIT_COMMIT_EMAIL:
        required: true
      GIT_REPO_USER:
        required: true
      GIT_TOKEN:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Docker Registry
        run: |
          echo "${{ secrets.REGISTRY_IP }} registry.local" | sudo tee -a /etc/hosts
          echo "${{ secrets.REGISTRY_CRT }}" > ~/registry.crt
          echo "${{ secrets.REGISTRY_KEY }}" > ~/registry.key
          sudo cp ~/registry.* /usr/local/share/ca-certificates/
          sudo update-ca-certificates
          sudo systemctl restart docker

      - name: Build Docker Image
        run: ${{ inputs.build_command }}

      - name: Install OpenVPN
        run: |
          sudo apt-get update
          sudo apt-get --assume-yes --no-install-recommends install openvpn

      - name: Setup VPN config
        run: |
          echo "${{ secrets.CA_CRT }}" > ca.crt
          echo "${{ secrets.CLIENT_CRT }}" > client.crt
          echo "${{ secrets.CLIENT_KEY }}" > client.key
          echo "${{ secrets.SECRET_TEXT }}" > secret.txt
          echo "${{ secrets.VPN_OVPN }}" > vpn.ovpn

      - name: Connect VPN
        run: sudo openvpn --config vpn.ovpn --daemon

      - name: Wait for a VPN connection
        timeout-minutes: 1
        run: until ping -c1 192.168.0.10; do sleep 2; done

      - name: Push Docker Image
        run: ${{ inputs.push_command }}

      - name: Kill VPN connection
        if: always()
        run: |
          sudo killall openvpn

      - name: Update Kubernetes Manifest
        run: |
          git config --global user.name "${{ secrets.GIT_COMMIT_USER }}"
          git config --global user.email "${{ secrets.GIT_COMMIT_EMAIL }}"
          git clone https://${{ secrets.GIT_REPO_USER }}:${{ secrets.GIT_TOKEN }}@github.com/${{ secrets.GIT_REPO_USER }}/k8s
          cd ${{ inputs.service_name }}
          ${{ inputs.apply_command }}
          make commit
          make push
